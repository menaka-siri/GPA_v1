<?php

namespace Proxies\__CG__\GPABundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Course extends \GPABundle\Entity\Course implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'GPABundle\\Entity\\Course' . "\0" . 'title', '' . "\0" . 'GPABundle\\Entity\\Course' . "\0" . 'credits', '' . "\0" . 'GPABundle\\Entity\\Course' . "\0" . 'semester', '' . "\0" . 'GPABundle\\Entity\\Course' . "\0" . 'year', '' . "\0" . 'GPABundle\\Entity\\Course' . "\0" . 'classAvg', '' . "\0" . 'GPABundle\\Entity\\Course' . "\0" . 'remarks', '' . "\0" . 'GPABundle\\Entity\\Course' . "\0" . 'id', '' . "\0" . 'GPABundle\\Entity\\Course' . "\0" . 'lec', '' . "\0" . 'GPABundle\\Entity\\Course' . "\0" . 'student');
        }

        return array('__isInitialized__', '' . "\0" . 'GPABundle\\Entity\\Course' . "\0" . 'title', '' . "\0" . 'GPABundle\\Entity\\Course' . "\0" . 'credits', '' . "\0" . 'GPABundle\\Entity\\Course' . "\0" . 'semester', '' . "\0" . 'GPABundle\\Entity\\Course' . "\0" . 'year', '' . "\0" . 'GPABundle\\Entity\\Course' . "\0" . 'classAvg', '' . "\0" . 'GPABundle\\Entity\\Course' . "\0" . 'remarks', '' . "\0" . 'GPABundle\\Entity\\Course' . "\0" . 'id', '' . "\0" . 'GPABundle\\Entity\\Course' . "\0" . 'lec', '' . "\0" . 'GPABundle\\Entity\\Course' . "\0" . 'student');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Course $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setTitle($title)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', array($title));

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', array());

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setCredits($credits)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCredits', array($credits));

        return parent::setCredits($credits);
    }

    /**
     * {@inheritDoc}
     */
    public function getCredits()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCredits', array());

        return parent::getCredits();
    }

    /**
     * {@inheritDoc}
     */
    public function setSemester($semester)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSemester', array($semester));

        return parent::setSemester($semester);
    }

    /**
     * {@inheritDoc}
     */
    public function getSemester()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSemester', array());

        return parent::getSemester();
    }

    /**
     * {@inheritDoc}
     */
    public function setYear($year)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setYear', array($year));

        return parent::setYear($year);
    }

    /**
     * {@inheritDoc}
     */
    public function getYear()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getYear', array());

        return parent::getYear();
    }

    /**
     * {@inheritDoc}
     */
    public function setClassAvg($classAvg)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setClassAvg', array($classAvg));

        return parent::setClassAvg($classAvg);
    }

    /**
     * {@inheritDoc}
     */
    public function getClassAvg()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getClassAvg', array());

        return parent::getClassAvg();
    }

    /**
     * {@inheritDoc}
     */
    public function setRemarks($remarks)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRemarks', array($remarks));

        return parent::setRemarks($remarks);
    }

    /**
     * {@inheritDoc}
     */
    public function getRemarks()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRemarks', array());

        return parent::getRemarks();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setLec(\GPABundle\Entity\Users $lec = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLec', array($lec));

        return parent::setLec($lec);
    }

    /**
     * {@inheritDoc}
     */
    public function getLec()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLec', array());

        return parent::getLec();
    }

    /**
     * {@inheritDoc}
     */
    public function addStudent(\GPABundle\Entity\Users $student)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addStudent', array($student));

        return parent::addStudent($student);
    }

    /**
     * {@inheritDoc}
     */
    public function removeStudent(\GPABundle\Entity\Users $student)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeStudent', array($student));

        return parent::removeStudent($student);
    }

    /**
     * {@inheritDoc}
     */
    public function getStudent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStudent', array());

        return parent::getStudent();
    }

}
